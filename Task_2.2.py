"""
2
В программировании можно из одной функции вызывать другую. Для
иллюстрации этой возможности напишите программу по следующему
описанию.

Основная ветка программы, не считая заголовков функций, состоит из
одной строки кода. Это вызов функции test(). В ней запрашивается на
ввод целое число. Если оно положительное, то вызывается функция
positive(), тело которой содержит команду вывода на экран слова
"Положительное". Если число отрицательное, то вызывается функция
negative(), ее тело содержит выражение вывода на экран слова
"Отрицательное".

Понятно, что вызов test() должен следовать после определения функций.
Однако имеет ли значение порядок определения самих функций? То есть
должны ли определения positive() и negative() предшествовать test() или
могут следовать после него? Проверьте вашу гипотезу, поменяв объявления
функций местами.

Попробуйте объяснить результат добавив комментарии к коду.
"""
# Вариант №1

def test(num):
    num = int(input("Введите целое число: "))

    def positive():
        if num > 0:
            print("Число Положительное!")

    def negative():
        if num < 0:
            print("Число Отрицательное!")
        elif num == 0:
            print("The Zero")

    positive()
    negative()
    # test() не вызовет функцию


# positive() NameError
# negative() NameError
test()

# Функции positive() и negative() должны вызываться внутри основе функции test()
# При вызове функций positive() и negative() в не нахождении своих функциях и приведет к ошибке NameError
# При вызове функций test() в не нахождении своей приведет к невызову фцнуции

# Вариант №2 (после Q&A сессии)


def test():
    num = int(input("Введите целое число: "))
    positive(num)
    negative(num)


def positive(num):
    if num > 0:
        print("Число Положительное!")


def negative(num):
    if num < 0:
        print("Число Отрицательное!")
    elif num == 0:
        print("The Zero")


test()


